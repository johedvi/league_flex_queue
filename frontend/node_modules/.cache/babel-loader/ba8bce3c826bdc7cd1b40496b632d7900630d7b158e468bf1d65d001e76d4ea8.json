{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan\\\\Desktop\\\\league-manager-react\\\\frontend\\\\src\\\\components\\\\GraphSection.js\",\n  _s = $RefreshSig$();\n// components/GraphSection.js\nimport React, { useState, useEffect } from \"react\";\nimport LineChart from \"./LineChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphSection = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Dummy Data: 2 players, 10 game scores each\n    const dummyData = {\n      labels: Array.from({\n        length: 10\n      }, (_, i) => `Game ${i + 1}`),\n      // Games 1 to 10\n      datasets: [{\n        label: \"Player 1\",\n        data: [5, 7, 8, 6, 5, 9, 10, 7, 6, 8],\n        // Player 1's scores for each game\n        borderColor: \"rgba(75,192,192,1)\",\n        backgroundColor: \"rgba(75,192,192,0.2)\",\n        borderWidth: 2\n      }, {\n        label: \"Player 2\",\n        data: [3, 5, 6, 7, 4, 6, 5, 8, 7, 6],\n        // Player 2's scores for each game\n        borderColor: \"rgba(255,99,132,1)\",\n        backgroundColor: \"rgba(255,99,132,0.2)\",\n        borderWidth: 2\n      }]\n    };\n    setChartData(dummyData);\n  }, []); // Empty dependency array to only run once when the component mounts\n\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-section\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphSection, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = GraphSection;\nexport default GraphSection;\nvar _c;\n$RefreshReg$(_c, \"GraphSection\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","jsxDEV","_jsxDEV","GraphSection","_s","chartData","setChartData","dummyData","labels","Array","from","length","_","i","datasets","label","data","borderColor","backgroundColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/components/GraphSection.js"],"sourcesContent":["// components/GraphSection.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst GraphSection = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Dummy Data: 2 players, 10 game scores each\r\n    const dummyData = {\r\n      labels: Array.from({ length: 10 }, (_, i) => `Game ${i + 1}`), // Games 1 to 10\r\n      datasets: [\r\n        {\r\n          label: \"Player 1\",\r\n          data: [5, 7, 8, 6, 5, 9, 10, 7, 6, 8], // Player 1's scores for each game\r\n          borderColor: \"rgba(75,192,192,1)\",\r\n          backgroundColor: \"rgba(75,192,192,0.2)\",\r\n          borderWidth: 2\r\n        },\r\n        {\r\n          label: \"Player 2\",\r\n          data: [3, 5, 6, 7, 4, 6, 5, 8, 7, 6], // Player 2's scores for each game\r\n          borderColor: \"rgba(255,99,132,1)\",\r\n          backgroundColor: \"rgba(255,99,132,0.2)\",\r\n          borderWidth: 2\r\n        }\r\n      ]\r\n    };\r\n\r\n    setChartData(dummyData);\r\n  }, []); // Empty dependency array to only run once when the component mounts\r\n\r\n  if (!chartData) return <div>Loading chart...</div>;\r\n\r\n  return (\r\n    <div className=\"graph-section\">\r\n      <LineChart chartData={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphSection;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMQ,SAAS,GAAG;MAChBC,MAAM,EAAEC,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAE;MAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,QAAQA,CAAC,GAAG,CAAC,EAAE,CAAC;MAAE;MAC/DC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAAE;QACvCC,WAAW,EAAE,oBAAoB;QACjCC,eAAe,EAAE,sBAAsB;QACvCC,WAAW,EAAE;MACf,CAAC,EACD;QACEJ,KAAK,EAAE,UAAU;QACjBC,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QAAE;QACtCC,WAAW,EAAE,oBAAoB;QACjCC,eAAe,EAAE,sBAAsB;QACvCC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC;IAEDb,YAAY,CAACC,SAAS,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,IAAI,CAACF,SAAS,EAAE,oBAAOH,OAAA;IAAAkB,QAAA,EAAK;EAAgB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAElD,oBACEtB,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAAAL,QAAA,eAC5BlB,OAAA,CAACF,SAAS;MAACK,SAAS,EAAEA;IAAU;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACpB,EAAA,CAnCID,YAAY;AAAAuB,EAAA,GAAZvB,YAAY;AAqClB,eAAeA,YAAY;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}