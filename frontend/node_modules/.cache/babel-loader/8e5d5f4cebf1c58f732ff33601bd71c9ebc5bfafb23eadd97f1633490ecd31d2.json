{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan\\\\Desktop\\\\league-manager-react\\\\frontend\\\\src\\\\components\\\\PlayerProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './PlayerProfile.css'; // Ensure this is linked\nimport { BACKEND_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PlayerProfile() {\n  _s();\n  const [leaderboardData, setLeaderboardData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchLeaderboardData();\n    const interval = setInterval(() => {\n      fetchLeaderboardData();\n    }, 300000); // Refresh every 5 minutes\n    return () => clearInterval(interval);\n  }, []);\n  const fetchLeaderboardData = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${BACKEND_URL}/api/leaderboard`);\n      setLeaderboardData(response.data.leaderboard);\n    } catch (error) {\n      console.error('Error fetching leaderboard data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const formatTime = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleTimeString('en-GB', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  const formatDate = isoString => {\n    const date = new Date(isoString);\n    return date.toLocaleDateString('en-GB'); // Format as DD/MM/YYYY\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading statistics...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player-profile\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"(Leaderboard - 10 senaste flex)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leaderboardData.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"player-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-rank\",\n            children: [index + 1, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-name\",\n            children: [player.summoner_name, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-score\",\n            children: [player.average_score.toFixed(2), \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 76\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-details\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-last-updated\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Last Updated:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), \" \", formatDate(player.last_updated), \" \", formatTime(player.last_updated)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), player.tenth_game ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-10th-game\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"10th Game Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), \" \", player.tenth_game.score, \" points\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"player-10th-game\",\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"10th game data not available\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, player.summoner_name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(PlayerProfile, \"fZC7htHhJGNLhs450LgoVt116xU=\");\n_c = PlayerProfile;\nexport default PlayerProfile;\nvar _c;\n$RefreshReg$(_c, \"PlayerProfile\");","map":{"version":3,"names":["React","useEffect","useState","axios","BACKEND_URL","jsxDEV","_jsxDEV","PlayerProfile","_s","leaderboardData","setLeaderboardData","loading","setLoading","fetchLeaderboardData","interval","setInterval","clearInterval","response","get","data","leaderboard","error","console","formatTime","isoString","date","Date","toLocaleTimeString","hour","minute","formatDate","toLocaleDateString","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","player","index","summoner_name","average_score","toFixed","last_updated","tenth_game","score","_c","$RefreshReg$"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/components/PlayerProfile.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './PlayerProfile.css'; // Ensure this is linked\r\nimport { BACKEND_URL } from '../config';\r\n\r\nfunction PlayerProfile() {\r\n  const [leaderboardData, setLeaderboardData] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    fetchLeaderboardData();\r\n    const interval = setInterval(() => {\r\n      fetchLeaderboardData();\r\n    }, 300000); // Refresh every 5 minutes\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const fetchLeaderboardData = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${BACKEND_URL}/api/leaderboard`);\r\n      setLeaderboardData(response.data.leaderboard);\r\n    } catch (error) {\r\n      console.error('Error fetching leaderboard data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const formatTime = (isoString) => {\r\n    const date = new Date(isoString);\r\n    return date.toLocaleTimeString('en-GB', {\r\n      hour: '2-digit',\r\n      minute: '2-digit',\r\n    });\r\n  };\r\n\r\n  const formatDate = (isoString) => {\r\n    const date = new Date(isoString);\r\n    return date.toLocaleDateString('en-GB'); // Format as DD/MM/YYYY\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading statistics...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"player-profile\">\r\n      <h2>(Leaderboard - 10 senaste flex)</h2>\r\n      <ul>\r\n        {leaderboardData.map((player, index) => (\r\n          <li key={player.summoner_name} className=\"player-item\">\r\n            <div className=\"player-header\">\r\n              <span className=\"player-rank\">{index + 1}.</span>\r\n              <span className=\"player-name\">{player.summoner_name}:</span> <span className=\"player-score\">{player.average_score.toFixed(2)} points</span>\r\n              </div>\r\n            <div className=\"player-details\">\r\n              <span className=\"player-last-updated\">\r\n                <strong>Last Updated:</strong> {formatDate(player.last_updated)} {formatTime(player.last_updated)}\r\n              </span>\r\n              {player.tenth_game ? (\r\n                <span className=\"player-10th-game\">\r\n                  <strong>10th Game Score:</strong> {player.tenth_game.score} points\r\n                </span>\r\n              ) : (\r\n                <span className=\"player-10th-game\">\r\n                  <em>10th game data not available</em>\r\n                </span>\r\n              )}\r\n            </div>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlayerProfile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}