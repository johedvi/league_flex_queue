{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan\\\\Desktop\\\\league-manager-react\\\\frontend\\\\src\\\\components\\\\GraphSection.js\",\n  _s = $RefreshSig$();\n// components/GraphSection.js\nimport React, { useState, useEffect } from \"react\";\nimport LineChart from \"./LineChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GraphSection = () => {\n  _s();\n  const [chartData, setChartData] = useState(null);\n  useEffect(() => {\n    // Dummy data for two players\n    const dummyData = {\n      player_scores: {\n        \"Player1\": [{\n          score: 15,\n          game_number: 1\n        }, {\n          score: 20,\n          game_number: 2\n        }, {\n          score: 18,\n          game_number: 3\n        }, {\n          score: 22,\n          game_number: 4\n        }, {\n          score: 16,\n          game_number: 5\n        }, {\n          score: 19,\n          game_number: 6\n        }, {\n          score: 14,\n          game_number: 7\n        }, {\n          score: 25,\n          game_number: 8\n        }, {\n          score: 21,\n          game_number: 9\n        }, {\n          score: 17,\n          game_number: 10\n        }],\n        \"Player2\": [{\n          score: 10,\n          game_number: 1\n        }, {\n          score: 12,\n          game_number: 2\n        }, {\n          score: 14,\n          game_number: 3\n        }, {\n          score: 15,\n          game_number: 4\n        }, {\n          score: 13,\n          game_number: 5\n        }, {\n          score: 11,\n          game_number: 6\n        }, {\n          score: 12,\n          game_number: 7\n        }, {\n          score: 16,\n          game_number: 8\n        }, {\n          score: 18,\n          game_number: 9\n        }, {\n          score: 14,\n          game_number: 10\n        }]\n      }\n    };\n\n    // Process the dummy data to prepare the chart\n    const playerScores = dummyData.player_scores;\n    const labels = Array.from({\n      length: 10\n    }, (_, i) => i + 1); // X-axis: 1 to 10\n    const datasets = []; // To store player-specific score datasets\n\n    Object.entries(playerScores).forEach(([playerName, games]) => {\n      // Create a dataset for the player\n      datasets.push({\n        label: playerName,\n        // Player's name\n        data: games.map(game => game.score),\n        // Player's scores\n        borderColor: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`,\n        backgroundColor: \"rgba(0, 0, 0, 0)\",\n        // Transparent\n        borderWidth: 2\n      });\n    });\n\n    // Prepare the chart data\n    const chartData = {\n      labels,\n      // X-axis labels (1 to 10 for game numbers)\n      datasets // Y-axis datasets (scores for each player)\n    };\n    setChartData(chartData);\n  }, []);\n  if (!chartData) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading chart...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"graph-section\",\n    children: /*#__PURE__*/_jsxDEV(LineChart, {\n      chartData: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(GraphSection, \"9euvDhZ+n6eLTlbzwvHmNPhoqAw=\");\n_c = GraphSection;\nexport default GraphSection;\nvar _c;\n$RefreshReg$(_c, \"GraphSection\");","map":{"version":3,"names":["React","useState","useEffect","LineChart","jsxDEV","_jsxDEV","GraphSection","_s","chartData","setChartData","dummyData","player_scores","score","game_number","playerScores","labels","Array","from","length","_","i","datasets","Object","entries","forEach","playerName","games","push","label","data","map","game","borderColor","Math","floor","random","backgroundColor","borderWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/components/GraphSection.js"],"sourcesContent":["// components/GraphSection.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport LineChart from \"./LineChart\";\r\n\r\nconst GraphSection = () => {\r\n  const [chartData, setChartData] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Dummy data for two players\r\n    const dummyData = {\r\n      player_scores: {\r\n        \"Player1\": [\r\n          { score: 15, game_number: 1 },\r\n          { score: 20, game_number: 2 },\r\n          { score: 18, game_number: 3 },\r\n          { score: 22, game_number: 4 },\r\n          { score: 16, game_number: 5 },\r\n          { score: 19, game_number: 6 },\r\n          { score: 14, game_number: 7 },\r\n          { score: 25, game_number: 8 },\r\n          { score: 21, game_number: 9 },\r\n          { score: 17, game_number: 10 },\r\n        ],\r\n        \"Player2\": [\r\n          { score: 10, game_number: 1 },\r\n          { score: 12, game_number: 2 },\r\n          { score: 14, game_number: 3 },\r\n          { score: 15, game_number: 4 },\r\n          { score: 13, game_number: 5 },\r\n          { score: 11, game_number: 6 },\r\n          { score: 12, game_number: 7 },\r\n          { score: 16, game_number: 8 },\r\n          { score: 18, game_number: 9 },\r\n          { score: 14, game_number: 10 },\r\n        ]\r\n      }\r\n    };\r\n\r\n    // Process the dummy data to prepare the chart\r\n    const playerScores = dummyData.player_scores;\r\n\r\n    const labels = Array.from({ length: 10 }, (_, i) => i + 1); // X-axis: 1 to 10\r\n    const datasets = []; // To store player-specific score datasets\r\n\r\n    Object.entries(playerScores).forEach(([playerName, games]) => {\r\n      // Create a dataset for the player\r\n      datasets.push({\r\n        label: playerName, // Player's name\r\n        data: games.map((game) => game.score), // Player's scores\r\n        borderColor: `rgba(${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, ${Math.floor(Math.random() * 255)}, 1)`,\r\n        backgroundColor: \"rgba(0, 0, 0, 0)\", // Transparent\r\n        borderWidth: 2\r\n      });\r\n    });\r\n\r\n    // Prepare the chart data\r\n    const chartData = {\r\n      labels, // X-axis labels (1 to 10 for game numbers)\r\n      datasets // Y-axis datasets (scores for each player)\r\n    };\r\n\r\n    setChartData(chartData);\r\n  }, []);\r\n\r\n  if (!chartData) return <div>Loading chart...</div>;\r\n\r\n  return (\r\n    <div className=\"graph-section\">\r\n      <LineChart chartData={chartData} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GraphSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}