{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan\\\\Desktop\\\\league-manager-react\\\\frontend\\\\src\\\\contexts\\\\QueueContext.js\",\n  _s = $RefreshSig$();\n// frontend/src/contexts/QueueContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client'; // Correct import for Socket.IO client\n\n// Create the QueueContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QueueContext = /*#__PURE__*/createContext();\n\n// Create the QueueProvider component\nexport const QueueProvider = ({\n  children\n}) => {\n  _s();\n  const [queue, setQueue] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Initialize Socket.IO client\n  const socket = io('http://localhost:5000'); // Ensure this matches your backend URL\n\n  // Function to fetch the current queue from the backend\n  const fetchQueue = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/queue');\n      setQueue(response.data.queue);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching queue:', err);\n      setError('Failed to fetch queue.');\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Fetch the initial queue when the provider mounts\n    fetchQueue();\n\n    // Listen for 'queue_updated' events from the server\n    socket.on('queue_updated', data => {\n      console.log('Queue updated via WebSocket:', data.queue);\n      setQueue(data.queue);\n    });\n\n    // Handle socket connection errors\n    socket.on('connect_error', err => {\n      console.error('WebSocket connection error:', err);\n      setError('WebSocket connection failed.');\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.disconnect();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(QueueContext.Provider, {\n    value: {\n      queue,\n      setQueue,\n      fetchQueue,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(QueueProvider, \"e4lsvL17b1mX8htF2jUYnvUf/WY=\");\n_c = QueueProvider;\nvar _c;\n$RefreshReg$(_c, \"QueueProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","io","jsxDEV","_jsxDEV","QueueContext","QueueProvider","children","_s","queue","setQueue","loading","setLoading","error","setError","socket","fetchQueue","response","get","data","err","console","on","log","disconnect","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/contexts/QueueContext.js"],"sourcesContent":["// frontend/src/contexts/QueueContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client'; // Correct import for Socket.IO client\r\n\r\n// Create the QueueContext\r\nexport const QueueContext = createContext();\r\n\r\n// Create the QueueProvider component\r\nexport const QueueProvider = ({ children }) => {\r\n  const [queue, setQueue] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Initialize Socket.IO client\r\n  const socket = io('http://localhost:5000'); // Ensure this matches your backend URL\r\n\r\n  // Function to fetch the current queue from the backend\r\n  const fetchQueue = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/api/queue');\r\n      setQueue(response.data.queue);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Error fetching queue:', err);\r\n      setError('Failed to fetch queue.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the initial queue when the provider mounts\r\n    fetchQueue();\r\n\r\n    // Listen for 'queue_updated' events from the server\r\n    socket.on('queue_updated', (data) => {\r\n      console.log('Queue updated via WebSocket:', data.queue);\r\n      setQueue(data.queue);\r\n    });\r\n\r\n    // Handle socket connection errors\r\n    socket.on('connect_error', (err) => {\r\n      console.error('WebSocket connection error:', err);\r\n      setError('WebSocket connection failed.');\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []); // Empty dependency array ensures this runs once on mount\r\n\r\n  return (\r\n    <QueueContext.Provider value={{ queue, setQueue, fetchQueue, loading, error }}>\r\n      {children}\r\n    </QueueContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,EAAE,QAAQ,kBAAkB,CAAC,CAAC;;AAEvC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,YAAY,gBAAGP,aAAa,CAAC,CAAC;;AAE3C;AACA,OAAO,MAAMQ,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExC;EACA,MAAMgB,MAAM,GAAGb,EAAE,CAAC,uBAAuB,CAAC,CAAC,CAAC;;EAE5C;EACA,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACFJ,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMK,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,YAAY,CAAC;MAC9CR,QAAQ,CAACO,QAAQ,CAACE,IAAI,CAACV,KAAK,CAAC;MAC7BG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC,OAAOQ,GAAG,EAAE;MACZC,OAAO,CAACR,KAAK,CAAC,uBAAuB,EAAEO,GAAG,CAAC;MAC3CN,QAAQ,CAAC,wBAAwB,CAAC;MAClCF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACd;IACAgB,UAAU,CAAC,CAAC;;IAEZ;IACAD,MAAM,CAACO,EAAE,CAAC,eAAe,EAAGH,IAAI,IAAK;MACnCE,OAAO,CAACE,GAAG,CAAC,8BAA8B,EAAEJ,IAAI,CAACV,KAAK,CAAC;MACvDC,QAAQ,CAACS,IAAI,CAACV,KAAK,CAAC;IACtB,CAAC,CAAC;;IAEF;IACAM,MAAM,CAACO,EAAE,CAAC,eAAe,EAAGF,GAAG,IAAK;MAClCC,OAAO,CAACR,KAAK,CAAC,6BAA6B,EAAEO,GAAG,CAAC;MACjDN,QAAQ,CAAC,8BAA8B,CAAC;IAC1C,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXC,MAAM,CAACS,UAAU,CAAC,CAAC;IACrB,CAAC;IACD;EACF,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEpB,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,KAAK;MAAEC,QAAQ;MAAEM,UAAU;MAAEL,OAAO;MAAEE;IAAM,CAAE;IAAAN,QAAA,EAC3EA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACY,CAAC;AAE5B,CAAC;AAACtB,EAAA,CAlDWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}