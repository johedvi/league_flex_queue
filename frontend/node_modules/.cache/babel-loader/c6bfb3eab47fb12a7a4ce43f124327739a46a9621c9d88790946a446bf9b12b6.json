{"ast":null,"code":"// frontend/src/contexts/QueueContext.js\nimport React,{createContext,useState,useEffect}from'react';import axios from'axios';import{io}from'socket.io-client';// Create the QueueContext\nimport{jsx as _jsx}from\"react/jsx-runtime\";export const QueueContext=/*#__PURE__*/createContext();// Initialize Socket.IO client outside the component to ensure a single instance\nconst socket=io('http://localhost:5000',{transports:['websocket'],// Force WebSocket transport\nreconnectionAttempts:5,// Number of reconnection attempts\ntimeout:10000// Connection timeout in milliseconds\n});// Create the QueueProvider component\nexport const QueueProvider=_ref=>{let{children}=_ref;const[queue,setQueue]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);// Function to fetch the current queue from the backend\nconst fetchQueue=async()=>{try{setLoading(true);const response=await axios.get('/api/queue');setQueue(response.data.queue);setLoading(false);}catch(err){console.error('Error fetching queue:',err);setError('Failed to fetch queue.');setLoading(false);}};useEffect(()=>{// Fetch the initial queue when the provider mounts\nfetchQueue();// Listen for 'queue_updated' events from the server\nsocket.on('queue_updated',data=>{console.log('Queue updated via WebSocket:',data.queue);setQueue(data.queue);});// Listen for successful connection\nsocket.on('connect',()=>{console.log('Connected to WebSocket server');});// Listen for disconnection\nsocket.on('disconnect',reason=>{console.log('Disconnected from WebSocket server:',reason);if(reason==='io server disconnect'){// The disconnection was initiated by the server, need to reconnect manually\nsocket.connect();}});// Handle socket connection errors\nsocket.on('connect_error',err=>{console.error('WebSocket connection error:',err);setError('WebSocket connection failed.');});// Cleanup on unmount\nreturn()=>{socket.disconnect();};},[]);// Empty dependency array ensures this runs once on mount\nreturn/*#__PURE__*/_jsx(QueueContext.Provider,{value:{queue,setQueue,fetchQueue,loading,error},children:children});};","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","io","jsx","_jsx","QueueContext","socket","transports","reconnectionAttempts","timeout","QueueProvider","_ref","children","queue","setQueue","loading","setLoading","error","setError","fetchQueue","response","get","data","err","console","on","log","reason","connect","disconnect","Provider","value"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/contexts/QueueContext.js"],"sourcesContent":["// frontend/src/contexts/QueueContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\n\r\n// Create the QueueContext\r\nexport const QueueContext = createContext();\r\n\r\n// Initialize Socket.IO client outside the component to ensure a single instance\r\nconst socket = io('http://localhost:5000', {\r\n  transports: ['websocket'], // Force WebSocket transport\r\n  reconnectionAttempts: 5,   // Number of reconnection attempts\r\n  timeout: 10000,            // Connection timeout in milliseconds\r\n});\r\n\r\n// Create the QueueProvider component\r\nexport const QueueProvider = ({ children }) => {\r\n  const [queue, setQueue] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to fetch the current queue from the backend\r\n  const fetchQueue = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get('/api/queue');\r\n      setQueue(response.data.queue);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Error fetching queue:', err);\r\n      setError('Failed to fetch queue.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the initial queue when the provider mounts\r\n    fetchQueue();\r\n\r\n    // Listen for 'queue_updated' events from the server\r\n    socket.on('queue_updated', (data) => {\r\n      console.log('Queue updated via WebSocket:', data.queue);\r\n      setQueue(data.queue);\r\n    });\r\n\r\n    // Listen for successful connection\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server');\r\n    });\r\n\r\n    // Listen for disconnection\r\n    socket.on('disconnect', (reason) => {\r\n      console.log('Disconnected from WebSocket server:', reason);\r\n      if (reason === 'io server disconnect') {\r\n        // The disconnection was initiated by the server, need to reconnect manually\r\n        socket.connect();\r\n      }\r\n    });\r\n\r\n    // Handle socket connection errors\r\n    socket.on('connect_error', (err) => {\r\n      console.error('WebSocket connection error:', err);\r\n      setError('WebSocket connection failed.');\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []); // Empty dependency array ensures this runs once on mount\r\n\r\n  return (\r\n    <QueueContext.Provider value={{ queue, setQueue, fetchQueue, loading, error }}>\r\n      {children}\r\n    </QueueContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"AAAA;AAEA,MAAO,CAAAA,KAAK,EAAIC,aAAa,CAAEC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CACjE,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,OAASC,EAAE,KAAQ,kBAAkB,CAErC;AAAA,OAAAC,GAAA,IAAAC,IAAA,yBACA,MAAO,MAAM,CAAAC,YAAY,cAAGP,aAAa,CAAC,CAAC,CAE3C;AACA,KAAM,CAAAQ,MAAM,CAAGJ,EAAE,CAAC,uBAAuB,CAAE,CACzCK,UAAU,CAAE,CAAC,WAAW,CAAC,CAAE;AAC3BC,oBAAoB,CAAE,CAAC,CAAI;AAC3BC,OAAO,CAAE,KAAkB;AAC7B,CAAC,CAAC,CAEF;AACA,MAAO,MAAM,CAAAC,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,OAAO,CAAEC,UAAU,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACkB,KAAK,CAAEC,QAAQ,CAAC,CAAGnB,QAAQ,CAAC,IAAI,CAAC,CAExC;AACA,KAAM,CAAAoB,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACFH,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAI,QAAQ,CAAG,KAAM,CAAAnB,KAAK,CAACoB,GAAG,CAAC,YAAY,CAAC,CAC9CP,QAAQ,CAACM,QAAQ,CAACE,IAAI,CAACT,KAAK,CAAC,CAC7BG,UAAU,CAAC,KAAK,CAAC,CACnB,CAAE,MAAOO,GAAG,CAAE,CACZC,OAAO,CAACP,KAAK,CAAC,uBAAuB,CAAEM,GAAG,CAAC,CAC3CL,QAAQ,CAAC,wBAAwB,CAAC,CAClCF,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDhB,SAAS,CAAC,IAAM,CACd;AACAmB,UAAU,CAAC,CAAC,CAEZ;AACAb,MAAM,CAACmB,EAAE,CAAC,eAAe,CAAGH,IAAI,EAAK,CACnCE,OAAO,CAACE,GAAG,CAAC,8BAA8B,CAAEJ,IAAI,CAACT,KAAK,CAAC,CACvDC,QAAQ,CAACQ,IAAI,CAACT,KAAK,CAAC,CACtB,CAAC,CAAC,CAEF;AACAP,MAAM,CAACmB,EAAE,CAAC,SAAS,CAAE,IAAM,CACzBD,OAAO,CAACE,GAAG,CAAC,+BAA+B,CAAC,CAC9C,CAAC,CAAC,CAEF;AACApB,MAAM,CAACmB,EAAE,CAAC,YAAY,CAAGE,MAAM,EAAK,CAClCH,OAAO,CAACE,GAAG,CAAC,qCAAqC,CAAEC,MAAM,CAAC,CAC1D,GAAIA,MAAM,GAAK,sBAAsB,CAAE,CACrC;AACArB,MAAM,CAACsB,OAAO,CAAC,CAAC,CAClB,CACF,CAAC,CAAC,CAEF;AACAtB,MAAM,CAACmB,EAAE,CAAC,eAAe,CAAGF,GAAG,EAAK,CAClCC,OAAO,CAACP,KAAK,CAAC,6BAA6B,CAAEM,GAAG,CAAC,CACjDL,QAAQ,CAAC,8BAA8B,CAAC,CAC1C,CAAC,CAAC,CAEF;AACA,MAAO,IAAM,CACXZ,MAAM,CAACuB,UAAU,CAAC,CAAC,CACrB,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACEzB,IAAA,CAACC,YAAY,CAACyB,QAAQ,EAACC,KAAK,CAAE,CAAElB,KAAK,CAAEC,QAAQ,CAAEK,UAAU,CAAEJ,OAAO,CAAEE,KAAM,CAAE,CAAAL,QAAA,CAC3EA,QAAQ,CACY,CAAC,CAE5B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}