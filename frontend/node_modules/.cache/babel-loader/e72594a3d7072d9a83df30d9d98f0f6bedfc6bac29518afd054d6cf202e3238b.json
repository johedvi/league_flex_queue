{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan\\\\Desktop\\\\league-manager-react\\\\frontend\\\\src\\\\contexts\\\\QueueContext.js\",\n  _s = $RefreshSig$();\n// frontend/src/contexts/QueueContext.js\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { io } from 'socket.io-client';\nimport { BACKEND_URL } from '../config'; // Import BACKEND_URL\n\n// Create the QueueContext\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QueueContext = /*#__PURE__*/createContext();\n\n// Initialize Socket.IO client outside the component to ensure a single instance\nconst socket = io(BACKEND_URL, {\n  transports: ['websocket'],\n  // Force WebSocket transport\n  secure: true,\n  // Ensure secure connection over HTTPS\n  reconnectionAttempts: 5,\n  // Number of reconnection attempts\n  timeout: 10000 // Connection timeout in milliseconds\n});\n\n// Create the QueueProvider component\nexport const QueueProvider = ({\n  children\n}) => {\n  _s();\n  const [queue, setQueue] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Function to fetch the current queue from the backend\n  const fetchQueue = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.get(`${BACKEND_URL}/api/queue`);\n      setQueue(response.data.queue);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching queue:', err);\n      setError('Failed to fetch queue.');\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    // Fetch the initial queue when the provider mounts\n    fetchQueue();\n\n    // Listen for 'queue_updated' events from the server\n    socket.on('queue_updated', data => {\n      console.log('Queue updated via WebSocket:', data.queue);\n      setQueue(data.queue);\n    });\n\n    // Listen for successful connection\n    socket.on('connect', () => {\n      console.log('Connected to WebSocket server');\n    });\n\n    // Listen for disconnection\n    socket.on('disconnect', reason => {\n      console.log('Disconnected from WebSocket server:', reason);\n      if (reason === 'io server disconnect') {\n        // The disconnection was initiated by the server, need to reconnect manually\n        socket.connect();\n      }\n    });\n\n    // Handle socket connection errors\n    socket.on('connect_error', err => {\n      console.error('WebSocket connection error:', err);\n      setError('WebSocket connection failed.');\n    });\n\n    // Cleanup on unmount\n    return () => {\n      socket.disconnect();\n    };\n  }, []); // Empty dependency array ensures this runs once on mount\n\n  // Function to add a player to the queue\n  const addPlayer = async playerName => {\n    try {\n      const response = await axios.post(`${BACKEND_URL}/api/queue`, {\n        player_name: playerName\n      });\n      console.log('Add Player Response:', response.data);\n      // The queue will update automatically via WebSocket\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error('Error adding player to queue:', err);\n      throw ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.error) || new Error('Failed to add player to queue.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(QueueContext.Provider, {\n    value: {\n      queue,\n      setQueue,\n      fetchQueue,\n      addPlayer,\n      loading,\n      error\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(QueueProvider, \"e4lsvL17b1mX8htF2jUYnvUf/WY=\");\n_c = QueueProvider;\nvar _c;\n$RefreshReg$(_c, \"QueueProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","io","BACKEND_URL","jsxDEV","_jsxDEV","QueueContext","socket","transports","secure","reconnectionAttempts","timeout","QueueProvider","children","_s","queue","setQueue","loading","setLoading","error","setError","fetchQueue","response","get","data","err","console","on","log","reason","connect","disconnect","addPlayer","playerName","post","player_name","_err$response","_err$response$data","Error","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/contexts/QueueContext.js"],"sourcesContent":["// frontend/src/contexts/QueueContext.js\r\n\r\nimport React, { createContext, useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { io } from 'socket.io-client';\r\nimport { BACKEND_URL } from '../config'; // Import BACKEND_URL\r\n\r\n// Create the QueueContext\r\nexport const QueueContext = createContext();\r\n\r\n// Initialize Socket.IO client outside the component to ensure a single instance\r\nconst socket = io(BACKEND_URL, {\r\n  transports: ['websocket'], // Force WebSocket transport\r\n  secure: true,              // Ensure secure connection over HTTPS\r\n  reconnectionAttempts: 5,   // Number of reconnection attempts\r\n  timeout: 10000,            // Connection timeout in milliseconds\r\n});\r\n\r\n// Create the QueueProvider component\r\nexport const QueueProvider = ({ children }) => {\r\n  const [queue, setQueue] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Function to fetch the current queue from the backend\r\n  const fetchQueue = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const response = await axios.get(`${BACKEND_URL}/api/queue`);\r\n      setQueue(response.data.queue);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Error fetching queue:', err);\r\n      setError('Failed to fetch queue.');\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fetch the initial queue when the provider mounts\r\n    fetchQueue();\r\n\r\n    // Listen for 'queue_updated' events from the server\r\n    socket.on('queue_updated', (data) => {\r\n      console.log('Queue updated via WebSocket:', data.queue);\r\n      setQueue(data.queue);\r\n    });\r\n\r\n    // Listen for successful connection\r\n    socket.on('connect', () => {\r\n      console.log('Connected to WebSocket server');\r\n    });\r\n\r\n    // Listen for disconnection\r\n    socket.on('disconnect', (reason) => {\r\n      console.log('Disconnected from WebSocket server:', reason);\r\n      if (reason === 'io server disconnect') {\r\n        // The disconnection was initiated by the server, need to reconnect manually\r\n        socket.connect();\r\n      }\r\n    });\r\n\r\n    // Handle socket connection errors\r\n    socket.on('connect_error', (err) => {\r\n      console.error('WebSocket connection error:', err);\r\n      setError('WebSocket connection failed.');\r\n    });\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      socket.disconnect();\r\n    };\r\n  }, []); // Empty dependency array ensures this runs once on mount\r\n\r\n  // Function to add a player to the queue\r\n  const addPlayer = async (playerName) => {\r\n    try {\r\n      const response = await axios.post(`${BACKEND_URL}/api/queue`, { player_name: playerName });\r\n      console.log('Add Player Response:', response.data);\r\n      // The queue will update automatically via WebSocket\r\n    } catch (err) {\r\n      console.error('Error adding player to queue:', err);\r\n      throw err.response?.data?.error || new Error('Failed to add player to queue.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <QueueContext.Provider value={{ queue, setQueue, fetchQueue, addPlayer, loading, error }}>\r\n      {children}\r\n    </QueueContext.Provider>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}