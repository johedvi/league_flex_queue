{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\johan\\\\Desktop\\\\league-manager-react\\\\frontend\\\\src\\\\components\\\\QueueSection.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/QueueSection.js\n\nimport React, { useContext, useState } from 'react';\nimport { QueueContext } from '../contexts/QueueContext';\nimport axios from 'axios';\nimport './QueueSection.css'; // Optional: For styling purposes\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst QueueSection = () => {\n  _s();\n  // Access queue state and functions from QueueContext\n  const {\n    queue,\n    loading,\n    error\n  } = useContext(QueueContext);\n\n  // Local state for the add player form\n  const [playerName, setPlayerName] = useState('');\n  const [addError, setAddError] = useState(null);\n  const [addSuccess, setAddSuccess] = useState(null);\n\n  // Handler for adding a player to the queue\n  const handleAddPlayer = async e => {\n    e.preventDefault();\n    setAddError(null);\n    setAddSuccess(null);\n    if (!playerName.trim()) {\n      setAddError('Player name cannot be empty.');\n      return;\n    }\n    try {\n      const response = await axios.post('/api/queue', {\n        player_name: playerName.trim()\n      });\n      setAddSuccess(response.data.message);\n      setPlayerName(''); // Clear the input field\n      // The queue will update automatically via WebSocket\n    } catch (err) {\n      console.error('Error adding player to queue:', err);\n      if (err.response && err.response.data && err.response.data.error) {\n        setAddError(err.response.data.error);\n      } else {\n        setAddError('Failed to add player to the queue.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"queue-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Queue\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddPlayer,\n      className: \"add-player-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: playerName,\n        onChange: e => setPlayerName(e.target.value),\n        placeholder: \"Enter Your Name\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Join Queue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), addSuccess && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"success\",\n      children: addSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 22\n    }, this), addError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: addError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading queue...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: queue.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"queue-list\",\n        children: queue.map((player, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"queue-item\",\n          children: [index + 1, \". \", player]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No players in the queue.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(QueueSection, \"IUlIwbtqPIl3vpkCcAiIjjYj30o=\");\n_c = QueueSection;\nexport default QueueSection;\nvar _c;\n$RefreshReg$(_c, \"QueueSection\");","map":{"version":3,"names":["React","useContext","useState","QueueContext","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","QueueSection","_s","queue","loading","error","playerName","setPlayerName","addError","setAddError","addSuccess","setAddSuccess","handleAddPlayer","e","preventDefault","trim","response","post","player_name","data","message","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","length","map","player","index","_c","$RefreshReg$"],"sources":["C:/Users/johan/Desktop/league-manager-react/frontend/src/components/QueueSection.js"],"sourcesContent":["// frontend/src/components/QueueSection.js\r\n\r\nimport React, { useContext, useState } from 'react';\r\nimport { QueueContext } from '../contexts/QueueContext';\r\nimport axios from 'axios';\r\nimport './QueueSection.css'; // Optional: For styling purposes\r\n\r\nconst QueueSection = () => {\r\n  // Access queue state and functions from QueueContext\r\n  const { queue, loading, error } = useContext(QueueContext);\r\n\r\n  // Local state for the add player form\r\n  const [playerName, setPlayerName] = useState('');\r\n  const [addError, setAddError] = useState(null);\r\n  const [addSuccess, setAddSuccess] = useState(null);\r\n\r\n  // Handler for adding a player to the queue\r\n  const handleAddPlayer = async (e) => {\r\n    e.preventDefault();\r\n    setAddError(null);\r\n    setAddSuccess(null);\r\n\r\n    if (!playerName.trim()) {\r\n      setAddError('Player name cannot be empty.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await axios.post('/api/queue', { player_name: playerName.trim() });\r\n      setAddSuccess(response.data.message);\r\n      setPlayerName(''); // Clear the input field\r\n      // The queue will update automatically via WebSocket\r\n    } catch (err) {\r\n      console.error('Error adding player to queue:', err);\r\n      if (err.response && err.response.data && err.response.data.error) {\r\n        setAddError(err.response.data.error);\r\n      } else {\r\n        setAddError('Failed to add player to the queue.');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"queue-section\">\r\n      <h2>Queue</h2>\r\n\r\n      {/* Add Player Form */}\r\n      <form onSubmit={handleAddPlayer} className=\"add-player-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={playerName}\r\n          onChange={(e) => setPlayerName(e.target.value)}\r\n          placeholder=\"Enter Your Name\"\r\n          required\r\n        />\r\n        <button type=\"submit\">Join Queue</button>\r\n      </form>\r\n\r\n      {/* Display Success or Error Messages */}\r\n      {addSuccess && <p className=\"success\">{addSuccess}</p>}\r\n      {addError && <p className=\"error\">{addError}</p>}\r\n\r\n      {/* Display Loading State */}\r\n      {loading ? (\r\n        <p>Loading queue...</p>\r\n      ) : error ? (\r\n        <p className=\"error\">Error: {error}</p>\r\n      ) : (\r\n        <>\r\n          {/* Display the Current Queue */}\r\n          {queue.length > 0 ? (\r\n            <ul className=\"queue-list\">\r\n              {queue.map((player, index) => (\r\n                <li key={index} className=\"queue-item\">\r\n                  {index + 1}. {player}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          ) : (\r\n            <p>No players in the queue.</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QueueSection;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}